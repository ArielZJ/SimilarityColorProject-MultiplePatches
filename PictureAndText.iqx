** include other stuff we need
<include>
/file = "CircleLocation.iqx"
</include>

** control cue parameters
<values>
/cue_height = 2
/cue_width = 2
</values>

<text cross>
	/ items = ("+")
	/ position = (values.x,values.y)
	/ color = snow
	/ txbgcolor = (127, 127, 127)
	/ fontstyle = ("Arial",50pt)
</text>

<shape F1>
/ shape = circle
/ size = (2 * values.r_F,2 * values.r_F)
/ hposition = expressions.a_1
/ vposition = expressions.b_1
</shape>

<shape F1_remover>
/ shape = circle
/ color = (values.screen_color,values.screen_color,values.screen_color)
/ size = (2 * values.r_F,2 * values.r_F)
/ hposition = expressions.a_1
/ vposition = expressions.b_1
</shape>

** new system of producing a cue to point at the stimuli we want compared

<picture F1_cue>
/ items = ("arrow.png")
/ size = (values.cue_height,values.cue_width)

/ hposition = expressions.a_1_cue
/ vposition = expressions.b_1_cue
/ rotation = values.angle_1_cue
</picture>

<shape F1_cue_remover>
/ shape = rectangle
/ size = (values.cue_height,values.cue_width)
/ color = (values.screen_color,values.screen_color,values.screen_color)
/ hposition = expressions.a_1_cue
/ vposition = expressions.b_1_cue
/ rotation = values.angle_1_cue
</shape>

<shape F2>
/ shape = circle
/ size = (2 * values.r_F,2 * values.r_F)
/ hposition = expressions.a_2
/ vposition = expressions.b_2
</shape>

<shape F2_remover>
/ shape = circle
/ color = (values.screen_color,values.screen_color,values.screen_color)
/ size = (2 * values.r_F,2 * values.r_F)
/ hposition = expressions.a_2
/ vposition = expressions.b_2
</shape>

<picture F2_cue>
/ items = ("arrow.png")
/ size = (values.cue_height,values.cue_width)

/ hposition = expressions.a_2_cue
/ vposition = expressions.b_2_cue
/ rotation = values.angle_2_cue
</picture>


<shape P1>
/ shape = circle
/ size = ( 2 * values.R_P, 2 * values.R_P)
/ hposition = expressions.a_3
/ vposition = expressions.b_3
</shape>

<shape P1_remover>
/ shape = circle
/ size = ( 2 * values.R_P, 2 * values.R_P)
/ color = (values.screen_color,values.screen_color,values.screen_color)
/ hposition = expressions.a_3
/ vposition = expressions.b_3
</shape>

<picture P1_cue>
/ items = ("arrow.png")
/ size = (values.cue_height*values.peripheral_scale,values.cue_width*values.peripheral_scale)

/ hposition = expressions.a_3_cue
/ vposition = expressions.b_3_cue
/ rotation = values.angle_3_cue
</picture>

<shape P1_cue_remover>
/ shape = rectangle
/ size = (values.cue_height*values.peripheral_scale,values.cue_width*values.peripheral_scale)
/ color = (values.screen_color,values.screen_color,values.screen_color)
/ hposition = expressions.a_3_cue
/ vposition = expressions.b_3_cue
/ rotation = values.angle_3_cue
</shape>

<shape P2>
/ shape = circle
/ size = (2 * values.R_P,2 * values.R_P)
/ hposition = expressions.a_4
/ vposition = expressions.b_4
</shape>

<shape P2_remover>
/ shape = circle
/ size = (2 * values.R_P,2 * values.R_P)
/ color = (values.screen_color,values.screen_color,values.screen_color)
/ hposition = expressions.a_4
/ vposition = expressions.b_4
</shape>

<picture P2_cue>
/ items = ("arrow.png")
/ size = (values.cue_height*values.peripheral_scale,values.cue_width*values.peripheral_scale)

/ hposition = expressions.a_4_cue
/ vposition = expressions.b_4_cue
/ rotation = values.angle_4_cue
</picture>

****************

<shape F3>
/ shape = circle
/ size = (2 * values.r_F,2 * values.r_F)
/ hposition = expressions.a_5
/ vposition = expressions.b_5
</shape>

<shape F3_remover>
/ shape = circle
/ color = (values.screen_color,values.screen_color,values.screen_color)
/ size = (2 * values.r_F,2 * values.r_F)
/ hposition = expressions.a_5
/ vposition = expressions.b_5
</shape>

** new system of producing a cue to point at the stimuli we want compared

<picture F3_cue>
/ items = ("arrow.png")
/ size = (values.cue_height,values.cue_width)

/ hposition = expressions.a_5_cue
/ vposition = expressions.b_5_cue
/ rotation = values.angle_5_cue
</picture>

<shape F3_cue_remover>
/ shape = rectangle
/ size = (values.cue_height,values.cue_width)
/ color = (values.screen_color,values.screen_color,values.screen_color)
/ hposition = expressions.a_5_cue
/ vposition = expressions.b_5_cue
/ rotation = values.angle_5_cue
</shape>

<shape F4>
/ shape = circle
/ size = (2 * values.r_F,2 * values.r_F)
/ hposition = expressions.a_6
/ vposition = expressions.b_6
</shape>

<shape F4_remover>
/ shape = circle
/ color = (values.screen_color,values.screen_color,values.screen_color)
/ size = (2 * values.r_F,2 * values.r_F)
/ hposition = expressions.a_6
/ vposition = expressions.b_6
</shape>

<picture F4_cue>
/ items = ("arrow.png")
/ size = (values.cue_height,values.cue_width)

/ hposition = expressions.a_6_cue
/ vposition = expressions.b_6_cue
/ rotation = values.angle_6_cue
</picture>


<shape P3>
/ shape = circle
/ size = ( 2 * values.R_P, 2 * values.R_P)
/ hposition = expressions.a_7
/ vposition = expressions.b_7
</shape>

<shape P3_remover>
/ shape = circle
/ size = ( 2 * values.R_P, 2 * values.R_P)
/ color = (values.screen_color,values.screen_color,values.screen_color)
/ hposition = expressions.a_7
/ vposition = expressions.b_7
</shape>

<picture P3_cue>
/ items = ("arrow.png")
/ size = (values.cue_height,values.cue_width)

/ hposition = expressions.a_7_cue
/ vposition = expressions.b_7_cue
/ rotation = values.angle_7_cue
</picture>

<shape P3_cue_remover>
/ shape = rectangle
/ size = (values.cue_height,values.cue_width)
/ color = (values.screen_color,values.screen_color,values.screen_color)
/ hposition = expressions.a_7_cue
/ vposition = expressions.b_7_cue
/ rotation = values.angle_7_cue
</shape>

<shape P4>
/ shape = circle
/ size = (2 * values.R_P,2 * values.R_P)
/ hposition = expressions.a_8
/ vposition = expressions.b_8
</shape>

<shape P4_remover>
/ shape = circle
/ size = (2 * values.R_P,2 * values.R_P)
/ color = (values.screen_color,values.screen_color,values.screen_color)
/ hposition = expressions.a_8
/ vposition = expressions.b_8
</shape>

<picture P4_cue>
/ items = ("arrow.png")
/ size = (values.cue_height,values.cue_width)

/ hposition = expressions.a_8_cue
/ vposition = expressions.b_8_cue
/ rotation = values.angle_8_cue
</picture>

***************************************************************************************************
***************************************************************************************************
<htmlpage consent>
/ file = "consent_form.html"
</htmlpage>

<block consent>
/ preinstructions = (consent)
</block>