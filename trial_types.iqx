***************************************************************************
***************************************************************************
			Color Similarity Across Retinal Eccentricity
			2 stimuli, fixed vs. scaled size patches, during
			Main Experimental Trials
***************************************************************************
***************************************************************************

*******************************************************************************************************************
*******************************************************************************************************************
	INCLUDE
*******************************************************************************************************************
*******************************************************************************************************************
<include >
/file = "main.iqx"
/file = "general_stimuli.iqx"
</include>
*******************************************************************************************************************
*******************************************************************************************************************

*******************************************************************************************************************
*******************************************************************************************************************
	Initialised Constants:
*******************************************************************************************************************
*******************************************************************************************************************

<values>

</values>

*******************************************************************************************************************
*******************************************************************************************************************
	STIMULI
*******************************************************************************************************************
*******************************************************************************************************************

*******************************************************************************************************************
*******************************************************************************************************************
	TRIALS
*******************************************************************************************************************
*******************************************************************************************************************

<trial trial_selection>
/ timeout = 0
/ recorddata = false
/ ontrialend = [
	values.Circle_1 = 0;
	values.Circle_2 = 0;
	values.Circle_3 = 0;
	values.Circle_4 = 0;
	values.Position_1 = 0;
	values.Position_2 = 0;
	values.Position_3 = 0;
	values.Position_4 = 0;
	values.Color_1 = 0;
	values.Color_2 = 0;
	values.Color_3 = 0;
	values.Color_4 = 0;
	values.response = 0;
	values.trial_type = "";
	values.catch_vals = "";
]
/ branch = [ // working properly now
	values.sequence_number = counter.sequence.selectedvalue; // debugging aid
	if(item.sequence.item(counter.sequence.selectedvalue) == "during"){ // working & integrated
		trial.present_during
	} else {
		trial.catch // working & integrated
	}
]
</trial>

********* During ***********

<trial present_during>
/ ontrialbegin = [
	
	values.trial_number += 1;
	values.trial_type = "during";
	values.order_num = counter.order_during.selectedvalue; // debugging aid
	
	// counter.order_during picks one of the trials out of the set of trials for this trial type
	// there are (#stimuli)^2 * # conditions_for_trial_type trials in counter.order_during
	// in this example there are 5*5*3 = 75 trials to choose from

	if(item.present_during_eccen.item(counter.order_during.selectedvalue) == "XAXA"){ // starting with fixed fovea and screen
	
		// insert the first fixation cross
		trial.present_during.insertstimulustime(text.cross_X, 0);
		
		// mask the first fixation cross, present the first stimulus
		trial.present_during.insertstimulustime(shape.cross_X_mask, values.fixation_duration);
		trial.present_during.insertstimulustime(shape.A1, values.fixation_duration);
		
		// mask the first stimulus, leave a gap
		trial.present_during.insertstimulustime(shape.A_mask, values.fixation_duration + values.stimulus_duration);
		
		//present the second fixation cross
		trial.present_during.insertstimulustime(text.cross_X, values.fixation_duration + values.stimulus_duration + values.gap_duration);
		
		// mask the second fixation cross, present the second stimulus
		trial.present_during.insertstimulustime(shape.cross_X_mask, values.fixation_duration + values.stimulus_duration + values.fixation_duration+ values.gap_duration);
		trial.present_during.insertstimulustime(shape.A2, values.fixation_duration + values.stimulus_duration + values.fixation_duration+ values.gap_duration);
		
		// record that the positions
		values.Circle_1 = -1; // Screen (-1 = fixed, 1 = moved)
		values.Circle_2 = -1; // Retina (-1 = fixed, 1 = moved)
		
		
		// Choosing colours for the stimuli
		// present_during_colour1 and present_during_colour2 each have a unique combination of colours for each trial
		// they are specified in 'BaseScript.iqx'
		if(item.present_during_colour1.item(counter.order_during.selectedvalue) == "1"){
			shape.A1.color = values.color1;
			values.Color_1 = 1;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "2"){
			shape.A1.color = values.color2;
			values.Color_1 = 2;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "3"){
			shape.A1.color = values.color3;
			values.Color_1 = 3;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "4"){
			shape.A1.color = values.color4;
			values.Color_1 = 4;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "5"){
			shape.A1.color = values.color5;
			values.Color_1 = 5;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "6"){
			shape.A1.color = values.color6;
			values.Color_1 = 6;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "7"){
			shape.A1.color = values.color7;
			values.Color_1 = 7;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "8"){
			shape.A1.color = values.color8;
			values.Color_1 = 8;
		}else{
			shape.A1.color = values.color9;
			values.Color_1 = 9;
		}
		
		if(item.present_during_colour2.item(counter.order_during.selectedvalue) == "1"){
			shape.A2.color = values.color1;
			values.Color_2 = 1;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "2"){
			shape.A2.color = values.color2;
			values.Color_2 = 2;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "3"){
			shape.A2.color = values.color3;
			values.Color_2 = 3;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "4"){
			shape.A2.color = values.color4;
			values.Color_2 = 4;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "5"){
			shape.A2.color = values.color5;
			values.Color_2 = 5;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "6"){
			shape.A2.color = values.color6;
			values.Color_2 = 6;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "7"){
			shape.A2.color = values.color7;
			values.Color_2 = 7;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "8"){
			shape.A2.color = values.color8;
			values.Color_2 = 8;
		}else{
			shape.A2.color = values.color9;
			values.Color_2 = 9;
		}
		
	// see above for documentation. Inquisit doesn't allow functions, so have to specify everything again for Fovea-Periphery	
	}else if(item.present_during_eccen.item(counter.order_during.selectedvalue) == "XBYB"){ // screen fixed, retina moves
	
		// insert the first fixation cross
		trial.present_during.insertstimulustime(text.cross_X, 0);
		
		// mask the first fixation cross, present the first stimulus
		trial.present_during.insertstimulustime(shape.cross_X_mask, values.fixation_duration);
		trial.present_during.insertstimulustime(shape.B1, values.fixation_duration);
		
		// mask the first stimulus, present the second fixation cross
		trial.present_during.insertstimulustime(shape.B_mask, values.fixation_duration + values.stimulus_duration);
		trial.present_during.insertstimulustime(text.cross_Y, values.fixation_duration + values.stimulus_duration+ values.gap_duration);
		
		// mask the second fixation cross, present the second stimulus
		trial.present_during.insertstimulustime(shape.cross_Y_mask, values.fixation_duration + values.stimulus_duration + values.fixation_duration+ values.gap_duration);
		trial.present_during.insertstimulustime(shape.B2, values.fixation_duration + values.stimulus_duration + values.fixation_duration+ values.gap_duration);
		
		// record that the positions
		values.Circle_1 = -1; // Screen (-1 = fixed, 1 = moved)
		values.Circle_2 = 1; // Retina (-1 = fixed, 1 = moved)
		
		
		// Choosing colours for the stimuli
		// present_during_colour1 and present_during_colour2 each have a unique combination of colours for each trial
		// they are specified in 'BaseScript.iqx'
		if(item.present_during_colour1.item(counter.order_during.selectedvalue) == "1"){
			shape.B1.color = values.color1;
			values.Color_1 = 1;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "2"){
			shape.B1.color = values.color2;
			values.Color_1 = 2;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "3"){
			shape.B1.color = values.color3;
			values.Color_1 = 3;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "4"){
			shape.B1.color = values.color4;
			values.Color_1 = 4;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "5"){
			shape.B1.color = values.color5;
			values.Color_1 = 5;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "6"){
			shape.B1.color = values.color6;
			values.Color_1 = 6;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "7"){
			shape.B1.color = values.color7;
			values.Color_1 = 7;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "8"){
			shape.B1.color = values.color8;
			values.Color_1 = 8;
		}else{
			shape.B1.color = values.color9;
			values.Color_1 = 9;
		}
		
		if(item.present_during_colour2.item(counter.order_during.selectedvalue) == "1"){
			shape.B2.color = values.color1;
			values.Color_2 = 1;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "2"){
			shape.B2.color = values.color2;
			values.Color_2 = 2;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "3"){
			shape.B2.color = values.color3;
			values.Color_2 = 3;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "4"){
			shape.B2.color = values.color4;
			values.Color_2 = 4;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "5"){
			shape.B2.color = values.color5;
			values.Color_2 = 5;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "6"){
			shape.B2.color = values.color6;
			values.Color_2 = 6;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "7"){
			shape.B2.color = values.color7;
			values.Color_2 = 7;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "8"){
			shape.B2.color = values.color8;
			values.Color_2 = 8;
		}else{
			shape.B2.color = values.color9;
			values.Color_2 = 9;
		}
		
	} else if(item.present_during_eccen.item(counter.order_during.selectedvalue) == "XBYC"){ // Screen moves, retina fixed
	
		// insert the first fixation cross
		trial.present_during.insertstimulustime(text.cross_X, 0);
		
		// mask the first fixation cross, present the first stimulus
		trial.present_during.insertstimulustime(shape.cross_X_mask, values.fixation_duration);
		trial.present_during.insertstimulustime(shape.B1, values.fixation_duration);
		
		// mask the first stimulus, present the second fixation cross
		trial.present_during.insertstimulustime(shape.B_mask, values.fixation_duration + values.stimulus_duration);
		trial.present_during.insertstimulustime(text.cross_Y, values.fixation_duration + values.stimulus_duration+ values.gap_duration);
		
		// mask the second fixation cross, present the second stimulus
		trial.present_during.insertstimulustime(shape.cross_Y_mask, values.fixation_duration + values.stimulus_duration + values.fixation_duration+ values.gap_duration);
		trial.present_during.insertstimulustime(shape.C2, values.fixation_duration + values.stimulus_duration + values.fixation_duration+ values.gap_duration);
		
		// record that the positions
		values.Circle_1 = 1; // Screen (-1 = fixed, 1 = moved)
		values.Circle_2 = -1; // Retina (-1 = fixed, 1 = moved)
		
		
		// Choosing colours for the stimuli
		// present_during_colour1 and present_during_colour2 each have a unique combination of colours for each trial
		// they are specified in 'BaseScript.iqx'
		if(item.present_during_colour1.item(counter.order_during.selectedvalue) == "1"){
			shape.B1.color = values.color1;
			values.Color_1 = 1;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "2"){
			shape.B1.color = values.color2;
			values.Color_1 = 2;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "3"){
			shape.B1.color = values.color3;
			values.Color_1 = 3;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "4"){
			shape.B1.color = values.color4;
			values.Color_1 = 4;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "5"){
			shape.B1.color = values.color5;
			values.Color_1 = 5;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "6"){
			shape.B1.color = values.color6;
			values.Color_1 = 6;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "7"){
			shape.B1.color = values.color7;
			values.Color_1 = 7;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "8"){
			shape.B1.color = values.color8;
			values.Color_1 = 8;
		}else{
			shape.B1.color = values.color9;
			values.Color_1 = 9;
		}
		
		if(item.present_during_colour2.item(counter.order_during.selectedvalue) == "1"){
			shape.C2.color = values.color1;
			values.Color_2 = 1;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "2"){
			shape.C2.color = values.color2;
			values.Color_2 = 2;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "3"){
			shape.C2.color = values.color3;
			values.Color_2 = 3;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "4"){
			shape.C2.color = values.color4;
			values.Color_2 = 4;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "5"){
			shape.C2.color = values.color5;
			values.Color_2 = 5;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "6"){
			shape.C2.color = values.color6;
			values.Color_2 = 6;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "7"){
			shape.C2.color = values.color7;
			values.Color_2 = 7;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "8"){
			shape.C2.color = values.color8;
			values.Color_2 = 8;
		}else{
			shape.C2.color = values.color9;
			values.Color_2 = 9;
		}
		
	}else if(item.present_during_eccen.item(counter.order_during.selectedvalue) == "XAXB"){ // screen moves, retina moves
	
		// insert the first fixation cross
		trial.present_during.insertstimulustime(text.cross_X, 0);
		
		// mask the first fixation cross, present the first stimulus
		trial.present_during.insertstimulustime(shape.cross_X_mask, values.fixation_duration);
		trial.present_during.insertstimulustime(shape.A1, values.fixation_duration);
		
		// mask the first stimulus, present the second fixation cross
		trial.present_during.insertstimulustime(shape.A_mask, values.fixation_duration + values.stimulus_duration);
		trial.present_during.insertstimulustime(text.cross_X, values.fixation_duration + values.stimulus_duration+ values.gap_duration);
		
		// mask the second fixation cross, present the second stimulus
		trial.present_during.insertstimulustime(shape.cross_X_mask, values.fixation_duration + values.stimulus_duration + values.fixation_duration+ values.gap_duration);
		trial.present_during.insertstimulustime(shape.B2, values.fixation_duration + values.stimulus_duration + values.fixation_duration+ values.gap_duration);
		
		// record that the positions
		values.Circle_1 = 1; // Screen (-1 = fixed, 1 = moved)
		values.Circle_2 = 1; // Retina (-1 = fixed, 1 = moved)
		
		
		// Choosing colours for the stimuli
		// present_during_colour1 and present_during_colour2 each have a unique combination of colours for each trial
		// they are specified in 'BaseScript.iqx'
		if(item.present_during_colour1.item(counter.order_during.selectedvalue) == "1"){
			shape.A1.color = values.color1;
			values.Color_1 = 1;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "2"){
			shape.A1.color = values.color2;
			values.Color_1 = 2;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "3"){
			shape.A1.color = values.color3;
			values.Color_1 = 3;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "4"){
			shape.A1.color = values.color4;
			values.Color_1 = 4;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "5"){
			shape.A1.color = values.color5;
			values.Color_1 = 5;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "6"){
			shape.A1.color = values.color6;
			values.Color_1 = 6;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "7"){
			shape.A1.color = values.color7;
			values.Color_1 = 7;
		}else if (item.present_during_colour1.item(counter.order_during.selectedvalue) == "8"){
			shape.A1.color = values.color8;
			values.Color_1 = 8;
		}else{
			shape.A1.color = values.color9;
			values.Color_1 = 9;
		}
		
		if(item.present_during_colour2.item(counter.order_during.selectedvalue) == "1"){
			shape.B2.color = values.color1;
			values.Color_2 = 1;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "2"){
			shape.B2.color = values.color2;
			values.Color_2 = 2;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "3"){
			shape.B2.color = values.color3;
			values.Color_2 = 3;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "4"){
			shape.B2.color = values.color4;
			values.Color_2 = 4;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "5"){
			shape.B2.color = values.color5;
			values.Color_2 = 5;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "6"){
			shape.B2.color = values.color6;
			values.Color_2 = 6;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "7"){
			shape.B2.color = values.color7;
			values.Color_2 = 7;
		}else if (item.present_during_colour2.item(counter.order_during.selectedvalue) == "8"){
			shape.B2.color = values.color8;
			values.Color_2 = 8;
		}else{
			shape.B2.color = values.color9;
			values.Color_2 = 9;
		}
		
	}
	
]
/ stimulusframes = []
/ timeout = values.trial_timeout // how long the trial lasts for, specified in 'main.iqx'
/ recorddata = false
/ ontrialend = [
	trial.present_during.clearstimulusframes(); // not sure if this is strictly necessary
]
/ branch = [trial.response_options] // display the various response options. Back on 'response.iqx'
</trial>

********* Catch *********** // NEEDS TO GENERALLY BE FIXED AS PER NAO'S SUGGESTIONS
<trial catch>
/ ontrialbegin = [
				trial.catch.insertstimulusframe(text.catch,1);
				values.trial_type = "catch";
				]
/ timeout = values.patch_timeout
/ recorddata = false
/ branch = [trial.response_options_catch] // special catch trial response options
</trial>

*******************************************************************************************************************
*******************************************************************************************************************
	BLOCKS
*******************************************************************************************************************
*******************************************************************************************************************